@using Nop.Plugin.BookPlugin.Domains
@using Nop.Web.Framework.Models.DataTables
@using Nop.Plugin.BookPlugin.Models
@model BookSearchModel

@{
    //page title
    ViewBag.PageTitle = T("Admin.ShowBooksWidget.Books").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("BookPlugin");
}

@{
    const string hideSearchBlockAttributeName = "BookListPage.HideSearchBlock";
    //var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);

    var hideSearchBlock = false;
}

<form asp-controller="BookPlugin" asp-action="List" method="post">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Admin.ShowBooksWidget.Books")
        </h1>
        <div class="float-right">
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus-square"></i>
                @T("Admin.Common.AddNew")
            </a>
            @*<div class="btn-group">
                <button type="button" class="btn btn-success">
                    <i class="fas fa-download"></i>
                    @T("Admin.Common.Export")
                </button>
                <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                    <span class="caret"></span>
                    <span class="sr-only">&nbsp;</span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    <li class="dropdown-item">
                        <button asp-action="ExportXML" type="submit" name="exportxml-all">
                            <i class="far fa-file-code"></i>
                            @T("Admin.Common.ExportToXml.All")
                        </button>
                    </li>
                    <li class="dropdown-item">
                        <button type="button" id="exportxml-selected">
                            <i class="far fa-file-code"></i>
                            @T("Admin.Common.ExportToXml.Selected")
                        </button>
                    </li>
                    <li class="dropdown-divider"></li>
                    <li class="dropdown-item">
                        <button asp-action="ExportExcel" type="submit" name="exportexcel-all">
                            <i class="far fa-file-excel"></i>
                            @T("Admin.Common.ExportToExcel.All")
                        </button>
                    </li>
                    <li class="dropdown-item">
                        <button type="button" id="exportexcel-selected">
                            <i class="far fa-file-excel"></i>
                            @T("Admin.Common.ExportToExcel.Selected")
                        </button>
                    </li>
                </ul>

            </div>*@
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CustomerListButtons, additionalData = Model })
        </div>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="form-horizontal">
                <div class="cards-group">
                    <div class="card card-default card-search">
                        <div class="card-body">
                            <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                            </div>
                            <div class="search-body @(hideSearchBlock ? "closed" : "")">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchName" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="SearchName" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-7">
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchAuthor" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="SearchAuthor" />
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchPublishDate" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="SearchPublishDate" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="text-center col-12">
                                        <button type="button" id="search-books" class="btn btn-primary btn-search">
                                            <i class="fas fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card card-default">
                        <div class="card-body">
                            @{
                                var gridModel = new DataTablesModel
                                {
                                    Name = "books-grid",
                                    UrlRead = new DataUrl("BookList", "BookPlugin", null),
                                    SearchButtonId = "search-books",
                                    Length = Model.PageSize,
                                    LengthMenu = Model.AvailablePageSizes,
                                    Filters = new List<FilterParameter>
                                                                            {
                                        new FilterParameter(nameof(Model.SearchName)),
                                        new FilterParameter(nameof(Model.SearchAuthor)),
                                        new FilterParameter(nameof(Model.SearchPublishDate))
                                    }
                                };

                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(BookModel.Id))
                                {
                                    IsMasterCheckBox = true,
                                    Render = new RenderCheckBox("checkbox_customers"),
                                    ClassName = NopColumnClassDefaults.CenterAll,
                                    Width = "30"
                                });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(BookModel.Name))
                                {
                                    Title = T("Admin.ShowBooks.Books.Fields.Name").Text
                                });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(BookModel.Author))
                                {
                                    Title = T("Admin.ShowBooks.Books.Fields.Author").Text
                                });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(BookModel.PublishDate))
                                {
                                    Title = T("Admin.ShowBooks.Books.Fields.PublishDate").Text
                                });
                                gridModel.ColumnCollection.Add(new ColumnProperty(nameof(BookModel.Id))
                                {
                                    Title = T("Admin.Common.Edit").Text,
                                    Width = "80",
                                    ClassName = NopColumnClassDefaults.Button,
                                    Render = new RenderButtonEdit(new DataUrl("Edit"))
                                });
                            }
                            @await Html.PartialAsync("Table", gridModel)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</form>
